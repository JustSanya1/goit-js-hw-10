{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\nfunction addLeadingZero(value) {\n    if (value < 10) {\n        return String(value).padStart(2, \"0\");\n    } else {\n        return value;\n    }\n}\n\nconst buttonEl = document.querySelector(\"button\");\nbuttonEl.disabled = true; \nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (Date.now() >= selectedDates[0]) {\n            iziToast.error({\n             title: 'Error',\n                message: 'Please choose a date in the future',\n            position:\"topRight\"});\n            buttonEl.disabled = true;\n\n        } else {\n            userSelectedDate = selectedDates[0];\n            buttonEl.disabled = false;\n        }\n\n  },\n};\n\n\nconst calendarEl = flatpickr(\"#datetime-picker\", options)\n\nconst onClick = e => {\n    buttonEl.disabled = true;\n    calendarEl._input.disabled = true;\n    const intervalId = setInterval(() => {\n    let timeRemaining = userSelectedDate.getTime() - Date.now();\n    let { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    if (timeRemaining <= 0) {\n        clearInterval(intervalId);\n        calendarEl._input.disabled = false;\n    } else {\n      daysEl.innerText = addLeadingZero(days);\n      hoursEl.innerText = addLeadingZero(hours);\n      minutesEl.innerText = addLeadingZero(minutes);\n      secondsEl.innerText = addLeadingZero(seconds);\n    }\n    }, 1000);\n\n}\nbuttonEl.addEventListener('click', onClick);"],"names":["convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","buttonEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","iziToast","calendarEl","flatpickr","onClick","intervalId","timeRemaining"],"mappings":"2GAMA,SAASA,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,SAASC,EAAeC,EAAO,CAC3B,OAAIA,EAAQ,GACD,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAE7BA,CAEf,CAEA,MAAMC,EAAW,SAAS,cAAc,QAAQ,EAChDA,EAAS,SAAW,GACpB,MAAMC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EACJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACf,KAAK,IAAG,GAAMA,EAAc,CAAC,GAC7BC,EAAS,MAAM,CACd,MAAO,QACJ,QAAS,qCACb,SAAS,UAAU,CAAC,EACpBR,EAAS,SAAW,KAGpBK,EAAmBE,EAAc,CAAC,EAClCP,EAAS,SAAW,GAG7B,CACH,EAGMS,EAAaC,EAAU,mBAAoBJ,CAAO,EAElDK,EAAU,GAAK,CACjBX,EAAS,SAAW,GACpBS,EAAW,OAAO,SAAW,GAC7B,MAAMG,EAAa,YAAY,IAAM,CACrC,IAAIC,EAAgBR,EAAiB,QAAS,EAAG,KAAK,IAAG,EACrD,CAAE,KAAAX,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUqB,CAAa,EAC3DA,GAAiB,GACjB,cAAcD,CAAU,EACxBH,EAAW,OAAO,SAAW,KAE/BR,EAAO,UAAYH,EAAeJ,CAAI,EACtCQ,EAAQ,UAAYJ,EAAeH,CAAK,EACxCQ,EAAU,UAAYL,EAAeF,CAAO,EAC5CQ,EAAU,UAAYN,EAAeD,CAAO,EAE7C,EAAE,GAAI,CAEX,EACAG,EAAS,iBAAiB,QAASW,CAAO"}